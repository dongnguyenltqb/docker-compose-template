version: "3"
services:
  nginx_proxy_backend:
    image: nginx:latest
    container_name: nginx_proxy_backend
    links:
      - "elastic_1:dbelastic"
      - "mongo_1:dbmongo"
    networks:
      - backend
  elastic_1:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.11.1
    container_name: elastic_1
    networks:
      - backend
    environment:
      - node.name=elastic_hihi-node
      - cluster.name=es-docker-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9221:9200"
    volumes:
      - "./data/elastic1_volume:/usr/share/elasticsearch/data"
  kibana_1:
    image: docker.elastic.co/kibana/kibana:7.11.1
    networks:
      - backend
    links:
      - "elastic_1:dbelastic"
    ports:
      - "5621:5601"
    environment:
      SERVER_NAME: localhost:5621
      ELASTICSEARCH_HOSTS: http://dbelastic:9200
  mongo_1:
    image: mongo:4.2
    container_name: mongo_1
    networks:
      - backend
    environment:
      - MONGO_INITDB_DATABASE=bar
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=123
    command: mongod --replSet=rs0 --port=27021
    ports:
      - "27021:27021"
    volumes:
      - "./data/mongo1_volume:/data/db"
      - ./mongo-docker-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
  postgres_1:
    image: postgres:13
    container_name: postgres_1
    networks:
      - backend
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 123456
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5421:5432"
    volumes:
      - "./data/postgres1_volume:/var/lib/postgresql/data/pgdata"
      - ./postgres-init.sh:/docker-entrypoint-initdb.d/init-user-db.sh
  postgres_1:
    image: postgres:13
    container_name: postgres_1
    networks:
      - backend
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 123456
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5421:5432"
    volumes:
      - "./data/postgres1_volume:/var/lib/postgresql/data/pgdata"
      - ./postgres-init.sh:/docker-entrypoint-initdb.d/init-user-db.sh
  redis_1:
    image: redis:6
    container_name: redis_1
    networks:
      - backend
    ports:
      - "6321:6379"
    command: redis-server --appendonly yes
    volumes:
      - "./data/redis1_volume:/data"
  redis_2:
    image: redis:6
    container_name: redis_2
    networks:
      - backend
    ports:
      - "6322:6379"
    command: redis-server --appendonly yes
    volumes:
      - "./data/redis2_volume:/data"
  rabbitmq_1:
    image: rabbitmq:3-management
    container_name: rabbitmq_1
    environment:
      - RABBITMQ_DEFAULT_USER=docker
      - RABBITMQ_DEFAULT_PASS=docker
    networks:
      - backend
    ports:
      - "56721:5672"
      - "16721:15672"
    volumes:
      - "./data/rabbitmq1_volume:/data"
networks:
  backend:
    driver: bridge
